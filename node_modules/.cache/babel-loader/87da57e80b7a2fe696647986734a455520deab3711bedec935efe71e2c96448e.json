{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\IT\\\\JavaScript Bootcamp\\\\e-commerce-store\\\\src\\\\Components\\\\ScrollToTopButton\\\\ScrollToTopButton.tsx\",\n  _s = $RefreshSig$();\nimport \"./ScrollToTopButton.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrollToTopButton = () => {\n  _s();\n  const [showButton, setShowButton] = useState(false);\n  useEffect(() => {\n    // Add a scroll event listener to check if the user has scrolled down enough to show the button\n    const handleScroll = () => {\n      setShowButton(window.scrollY > 200); // Adjust the value as needed\n    };\n\n    window.addEventListener(\"scroll\", handleScroll);\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n  const scrollToTop = () => {\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `ScrollToTopButton ${showButton ? \"show\" : \"\"}`,\n    onClick: scrollToTop,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"\\u2191\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrollToTopButton, \"rGOrX3CCwlIbUUAZRpGZUtVAB5g=\");\n_c = ScrollToTopButton;\nexport default ScrollToTopButton;\nvar _c;\n$RefreshReg$(_c, \"ScrollToTopButton\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ScrollToTopButton","_s","showButton","setShowButton","handleScroll","window","scrollY","addEventListener","removeEventListener","scrollToTop","scrollTo","top","behavior","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/IT/JavaScript Bootcamp/e-commerce-store/src/Components/ScrollToTopButton/ScrollToTopButton.tsx"],"sourcesContent":["\r\nimport \"./ScrollToTopButton.css\"; \r\nimport React, { useState, useEffect } from \"react\";\r\nconst ScrollToTopButton = () => {\r\n  const [showButton, setShowButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Add a scroll event listener to check if the user has scrolled down enough to show the button\r\n    const handleScroll = () => {\r\n      setShowButton(window.scrollY > 200); // Adjust the value as needed\r\n    };\r\n\r\n    window.addEventListener(\"scroll\", handleScroll);\r\n\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleScroll);\r\n    };\r\n  }, []);\r\n\r\n  const scrollToTop = () => {\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <button\r\n      className={`ScrollToTopButton ${showButton ? \"show\" : \"\"}`}\r\n      onClick={scrollToTop}\r\n    >\r\n      {/* Add your arrow icon here */}\r\n      <span>&uarr;</span>\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default ScrollToTopButton;"],"mappings":";;AACA,OAAO,yBAAyB;AAChC,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMO,YAAY,GAAGA,CAAA,KAAM;MACzBD,aAAa,CAACE,MAAM,CAACC,OAAO,GAAG,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC;;IAEDD,MAAM,CAACE,gBAAgB,CAAC,QAAQ,EAAEH,YAAY,CAAC;IAE/C,OAAO,MAAM;MACXC,MAAM,CAACG,mBAAmB,CAAC,QAAQ,EAAEJ,YAAY,CAAC;IACpD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,WAAW,GAAGA,CAAA,KAAM;IACxBJ,MAAM,CAACK,QAAQ,CAAC;MACdC,GAAG,EAAE,CAAC;MACNC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IACEc,SAAS,EAAG,qBAAoBX,UAAU,GAAG,MAAM,GAAG,EAAG,EAAE;IAC3DY,OAAO,EAAEL,WAAY;IAAAM,QAAA,eAGrBhB,OAAA;MAAAgB,QAAA,EAAM;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEb,CAAC;AAAClB,EAAA,CAhCID,iBAAiB;AAAAoB,EAAA,GAAjBpB,iBAAiB;AAkCvB,eAAeA,iBAAiB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}